import * as cdk from 'aws-cdk-lib';
import { Construct } from 'constructs';
import * as cloudfront from 'aws-cdk-lib/aws-cloudfront';
import * as origins from 'aws-cdk-lib/aws-cloudfront-origins';
import * as s3 from 'aws-cdk-lib/aws-s3';
import * as s3deploy from 'aws-cdk-lib/aws-s3-deployment';
import * as path from 'path';

interface UiStackProps extends cdk.StackProps {
  accountsApiUrl: string;
  transactionsApiUrl: string;
  loanApiUrl: string;
  atmApiUrl: string;
  usersApiUrl: string; // TODO: remove and delegate to BaaS Service
}

/**
 * The `UiStack` sets up the hosting infrastructure for the Martian Bank's frontend application.
 * 
 * This stack provisions an S3 bucket to host the static assets of the React singple page application. 
 * It integrates it with a CloudFront distribution for global content delivery, and ensures API URLs are dynamically injected into the deployed environment.
 */
export class UiStack extends cdk.Stack {
  constructor(scope: Construct, id: string, props: UiStackProps) {
    super(scope, id, props);

    // S3 Bucket to store static assets for the React application (using aws-s3 L2 construct)
    const websiteBucket = new s3.Bucket(this, 'WebsiteBucket', {
      removalPolicy: cdk.RemovalPolicy.DESTROY,
      autoDeleteObjects: true,
      // blockPublicAccess: s3.BlockPublicAccess.BLOCK_ALL,
      // accessControl: s3.BucketAccessControl.PRIVATE,
      // enforceSSL: true
    });

    // CloudFront Distribution to serve the static assets globally (using aws-cloudfront L2 construct)
    const distribution = new cloudfront.Distribution(this, 'WebDistribution', {
      defaultBehavior: {
        origin: origins.S3BucketOrigin.withOriginAccessControl(websiteBucket),
        viewerProtocolPolicy: cloudfront.ViewerProtocolPolicy.REDIRECT_TO_HTTPS
      },
      defaultRootObject: 'index.html',
      errorResponses: [
        // httpStatus: 404,
        // responseHttpStatus: 200,
        // responsePagePath: '/index.html'
        {
          httpStatus: 404,
          responseHttpStatus: 200,
          responsePagePath: '/index.html'
        },
        {
          httpStatus: 403,
          responseHttpStatus: 200, 
          responsePagePath: '/index.html'
        }
      ]
    });

    // Deploy the React application to the S3 bucket (using aws-s3-deployment L2 construct)
    // The `../build` directory must contain the artifacts generated by the `vite build` process.
    new s3deploy.BucketDeployment(this, 'DeployWebsite', {
      sources: [
        // Deploy static build files from the build directory
        s3deploy.Source.asset(path.join(__dirname, '../build')),
        // Dynamically generate the environment configuration file
        s3deploy.Source.jsonData('env.js', {
          VITE_ACCOUNTS_URL: `${props.accountsApiUrl}/account/`,
          VITE_TRANSFER_URL: `${props.transactionsApiUrl}/transaction/`, 
          VITE_LOAN_URL: `${props.loanApiUrl}/loan/`,
          VITE_ATM_URL: props.atmApiUrl,
          VITE_USERS_URL: props.usersApiUrl
        })
      ],
      destinationBucket: websiteBucket,
      distribution
    });

    new cdk.CfnOutput(this, 'URL', { 
      value: `https://${distribution.distributionDomainName}` 
    });
  }
}